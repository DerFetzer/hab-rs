/*
 * openHAB REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ThingTypeDto {
    #[serde(rename = "UID", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "bridge", skip_serializing_if = "Option::is_none")]
    pub bridge: Option<bool>,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    #[serde(rename = "channelGroups", skip_serializing_if = "Option::is_none")]
    pub channel_groups: Option<Vec<models::ChannelGroupDefinitionDto>>,
    #[serde(rename = "channels", skip_serializing_if = "Option::is_none")]
    pub channels: Option<Vec<models::ChannelDefinitionDto>>,
    #[serde(rename = "configParameters", skip_serializing_if = "Option::is_none")]
    pub config_parameters: Option<Vec<models::ConfigDescriptionParameterDto>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(
        rename = "extensibleChannelTypeIds",
        skip_serializing_if = "Option::is_none"
    )]
    pub extensible_channel_type_ids: Option<Vec<String>>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "listed", skip_serializing_if = "Option::is_none")]
    pub listed: Option<bool>,
    #[serde(rename = "parameterGroups", skip_serializing_if = "Option::is_none")]
    pub parameter_groups: Option<Vec<models::ConfigDescriptionParameterGroupDto>>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, String>>,
    #[serde(
        rename = "supportedBridgeTypeUIDs",
        skip_serializing_if = "Option::is_none"
    )]
    pub supported_bridge_type_uids: Option<Vec<String>>,
}

impl ThingTypeDto {
    pub fn new() -> ThingTypeDto {
        ThingTypeDto {
            uid: None,
            bridge: None,
            category: None,
            channel_groups: None,
            channels: None,
            config_parameters: None,
            description: None,
            extensible_channel_type_ids: None,
            label: None,
            listed: None,
            parameter_groups: None,
            properties: None,
            supported_bridge_type_uids: None,
        }
    }
}
