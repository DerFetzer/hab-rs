/*
 * openHAB REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 8
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModuleTypeDto {
    #[serde(rename = "configDescriptions", skip_serializing_if = "Option::is_none")]
    pub config_descriptions: Option<Vec<models::ConfigDescriptionParameterDto>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "uid", skip_serializing_if = "Option::is_none")]
    pub uid: Option<String>,
    #[serde(rename = "visibility", skip_serializing_if = "Option::is_none")]
    pub visibility: Option<Visibility>,
}

impl ModuleTypeDto {
    pub fn new() -> ModuleTypeDto {
        ModuleTypeDto {
            config_descriptions: None,
            description: None,
            label: None,
            tags: None,
            uid: None,
            visibility: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Visibility {
    #[serde(rename = "VISIBLE")]
    Visible,
    #[serde(rename = "HIDDEN")]
    Hidden,
    #[serde(rename = "EXPERT")]
    Expert,
}

impl Default for Visibility {
    fn default() -> Visibility {
        Self::Visible
    }
}

