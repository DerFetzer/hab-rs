[workspace]
members = [
    ".", 
    "examples/*",
    "hab-rs-api-client",
]

[workspace.package]
version = "0.2.0"
license = "MIT"
edition = "2024"
authors = ["DerFetzer <kontakt@der-fetzer.de>"]
repository = "https://github.com/DerFetzer/hab-rs"
description = "Rust rule engine for openHAB"

[package]
name = "hab-rs"
keywords = ["openHAB", "rules", "engine"]

version.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
description.workspace = true

[workspace.dependencies]
hab-rs-api-client = { version = "=0.2.0", path = "hab-rs-api-client", default-features = false }

[dependencies]
async-trait = "0.1.88"
base64 = "0.22.1"
chrono = "0.4.40"
futures-util = "0.3.31"
hab-rs-api-client = { workspace = true }
palette = { version = "0.7.6", features = ["serializing"] }
regex = "1.11.1"
reqwest = { version = "0.12.15", default-features = false, features = ["stream"] }
serde = { version = "1.0.219", features = ["derive"] }
serde-nested-json = "0.1.3"
serde_json = "1.0.140"
serde_with = "3.12.0"
thiserror = "2.0.12"
tokio = { version = "1.44.1", features = ["rt", "macros"] }
tracing = "0.1.41"

[dev-dependencies]
hab-rs-api-client = { workspace = true, features = ["mockall"] }
tracing-test = { version = "0.2.5", features = ["no-env-filter"] }
mockall = "0.13.1"
rstest = "0.25.0"
paste = "1.0.15"

[target.'cfg(windows)'.dev-dependencies]
testcontainers = { version = "0.23.3" }

[target.'cfg(not(windows))'.dev-dependencies]
testcontainers = { version = "0.23.3", features = ["watchdog"] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["items_api"]
mockall = ["hab-rs-api-client/mockall"]

# Api features
actions_api = ["hab-rs-api-client/actions_api"]
addons_api = ["hab-rs-api-client/addons_api"]
audio_api = ["hab-rs-api-client/audio_api"]
auth_api = ["hab-rs-api-client/auth_api"]
channel_types_api = ["hab-rs-api-client/channel_types_api"]
config_descriptions_api = ["hab-rs-api-client/config_descriptions_api"]
discovery_api = ["hab-rs-api-client/discovery_api"]
events_api = ["hab-rs-api-client/events_api"]
habpanel_api = ["hab-rs-api-client/habpanel_api"]
iconsets_api = ["hab-rs-api-client/iconsets_api"]
inbox_api = ["hab-rs-api-client/inbox_api"]
items_api = ["hab-rs-api-client/items_api"]
links_api = ["hab-rs-api-client/links_api"]
logging_api = ["hab-rs-api-client/logging_api"]
module_types_api = ["hab-rs-api-client/module_types_api"]
persistence_api = ["hab-rs-api-client/persistence_api"]
profile_types_api = ["hab-rs-api-client/profile_types_api"]
root_api = ["hab-rs-api-client/root_api"]
rules_api = ["hab-rs-api-client/rules_api"]
services_api = ["hab-rs-api-client/services_api"]
sitemaps_api = ["hab-rs-api-client/sitemaps_api"]
systeminfo_api = ["hab-rs-api-client/systeminfo_api"]
tags_api = ["hab-rs-api-client/tags_api"]
templates_api = ["hab-rs-api-client/templates_api"]
thing_types_api = ["hab-rs-api-client/thing_types_api"]
things_api = ["hab-rs-api-client/things_api"]
transformations_api = ["hab-rs-api-client/transformations_api"]
ui_api = ["hab-rs-api-client/ui_api"]
uuid_api = ["hab-rs-api-client/uuid_api"]
voice_api = ["hab-rs-api-client/voice_api"]
